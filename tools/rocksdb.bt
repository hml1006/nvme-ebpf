#!/usr/bin/env bpftrace

#include<linux/blkdev.h>
#include<linux/nvme.h>

BEGIN
{
        printf("Tracing nvme command latency.Hit Ctrl-C to end.\n");
	@ioopcode[0] = "nvme_cmd_read";
	@ioopcode[1] = "nvme_cmd_write";
}

tracepoint:syscalls:sys_enter_pread64
/ comm == "mysqld" /
{
	@pread_count = count();
	@pread_data = hist(args->count);
}

kprobe:smi_nvme_setup_cmd,
kprobe:nvme_setup_cmd
{
	$req = (struct request*)arg1;
	if($req->rq_disk != 0) {
		@start[arg1] = nsecs;
	}
}
kprobe:smi_nvme_complete_rq,
kprobe:nvme_complete_rq
/@start[arg0]/
{
	$req = (struct request*)arg0;
	$disk = $req->rq_disk;
	$data_len = $req->__data_len;
	$flag = ($req->cmd_flags & ((1 << 8) - 1));
	if ($flag < 2) {
		$duration = (nsecs - @start[arg0]) / 1000;
		@nvme_count[$disk->disk_name, @ioopcode[$flag]] = count();
		@nvme_avg[$disk->disk_name, @ioopcode[$flag]] = avg($duration);
		@usecs[$disk->disk_name, @ioopcode[$flag]] = hist($duration);
		@data[$disk->disk_name, @ioopcode[$flag]] = lhist($data_len, 0, 262144, 16384);
		@usecs_stats[$disk->disk_name, @ioopcode[$flag]] = stats($duration);
		@data_stats[$disk->disk_name, @ioopcode[$flag]] = stats($data_len);
	}
	
	delete(@start[arg0]);
}

uprobe:/usr/lib64/mysql/plugin/ha_rocksdb.so:_ZN7rocksdb6DBImpl7GetImplERKNS_11ReadOptionsERKNS_5SliceERNS0_14GetImplOptionsE
{
	@start_rdb[tid] = nsecs;
}

uretprobe:/usr/lib64/mysql/plugin/ha_rocksdb.so:_ZN7rocksdb6DBImpl7GetImplERKNS_11ReadOptionsERKNS_5SliceERNS0_14GetImplOptionsE
/ @start_rdb[tid] /
{
	@get = count();
	$latency = (nsecs - @start_rdb[tid]) / 1000;
	@get_avg = avg($latency);
	@get_sum = sum($latency);
	@get_stats = stats($latency);
	@get_hist = hist($latency);

	delete(@start[tid]);
}

interval:s:1800
{
	time("======= %Y-%m-%d %H:%M:%S  ======================\n");
	print(@get);
	print(@get_avg);
	print(@get_sum);
	print(@get_stats);
	print(@get_hist);

	print(@pread_count);
	print(@pread_data);

	print(@nvme_count);
	print(@nvme_avg);
	print(@usecs_stats);
	print(@data_stats);
	print(@usecs);
	print(@data);

	clear(@get);
	clear(@get_avg);
	clear(@get_sum);
	clear(@get_stats);
	clear(@get_hist);

	clear(@pread_count);
	clear(@pread_data);

	clear(@nvme_count);
	clear(@nvme_avg);
	clear(@usecs_stats);
	clear(@data_stats);
	clear(@usecs);
	clear(@data);
}

END
{
	clear(@get);
	clear(@get_avg);
	clear(@get_sum);
	clear(@get_stats);
	clear(@get_hist);
	clear(@pread_data);
	clear(@ioopcode);
	clear(@start);
	clear(@usecs_stats);
	clear(@data_stats);
	clear(@usecs);
	clear(@data);
}
