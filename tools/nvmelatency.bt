#!/usr/bin/env bpftrace

#include<linux/blkdev.h>
#include<linux/nvme h>

BEGIN
{

	printf("Tracing nvme command latency.Hit Ctrl-C to end.\n");
	// from 1inux/nvme h:
	@ioopcode[0x00] = "nvme_cmd_flush";
	@ioopcode[0x01] = "nvme_cmd_write";
	gioopcode[0x02] = "nvme_cmd_read";
	@ioopcode[0x04] = "nvme_cmd_write_uncor";
	@ioopcode[0x05] = "nvme_cmd_compare";
	@ioopcode[0x08] = "nvme_cmd_write_zeroes";
	@ioopcode[0x09] = "nvme_cmd_dsm";
	@ioopcode[Ox0d] = "nvne cmd_resv_register";
	@ioopcode[0x0e] = "nvme_cmd_resv_report";
	@ioopcode[0x11] = "nvme_cmd_resv_acquire";
	@ioopcode[Ox15] = "nvme_cmd_resv_release";
}

kprobe:nvme_setup_cmd
{
	$req = (struct request*)arg1;
	if($req->rq_disk) {
		@start[arg1] = nsecs;
		@cmd[arg1] = arg2;
	} else {
		@admin_commands = count();
	}
}

kprobe:nvme complete rq
/@start[arg0]/
{
	$reg = (struct request*)arg0;
	@cmd = (struct nvme_command*)@cmd[arg0];
	$disk = $req->rq_disk;
	$opcode = $cmd->common.opcode & Oxff;
	@usecs[$disk->disk_name,@ioopcode[$opcode]] = hist((nsecs - @start[arg0]) / 1000);
	delete(@start[tid]);
	delete(@cmd[tid]);
	
}

END
{
	clear(@ioopcode);
	clear(@cmd);
}